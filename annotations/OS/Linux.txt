du -s [diretorio] - comando que retorna o tamanho do diretorio
df [diretorio] - comando que retorna o espaço livre, ou ocupado, de cada partição no sistema

man [comando] (mostra a documentção do comando)

cat [nome do arquivo] | grep [palavra procurada] (esse comando manda a saída para que o grep filtre apenas a linhas do texto com a palavra procurada)

ls -a (Mostra todos os arquivos e diretórios, até os ocultos)

tar xzf [nome do pacote] (extrai os arquivos do pacote)

Visualizando e terminando processos:
pstree (mostra um diagrama no qual é possível identificar quem originou (processo pai) cada um dos processos (processo filho))

ps (mostra os processos rodando no bash atual)
ps -e (lista todos os processos rodando no Linux)
ps -ef (lista os processos com mais informções como: o momento de inicialização e a pasta onde se encontra)
ps -ef | grep [palavra procurada] (esse comando irá passar a saída do ps para o software grep que fará uma filtragem e devolvera as linhas em que a palavra procurada aparece]

kill -TERM [ID do processo] (termina o processo, é o sinal default)
kill -9 [ID do processo] (força a finalização do processo)
kill -STOP [ID do processo] (pausa a execução do processo)
kill -CONT [ID do processo] (continua a execução do processo pausado)

killall (-9) [nome do processo] (mata todos os processos com o nome selecionado)

top (comando que mostra muitas informações sobre os processos como a utilização de CPU e Memória)
top -u [nome do usuario] (mostra os processos apenas do usuario)
top -p [ID do processo] (mostra as informações apenas do processo específico)
Quando dentro da vizualição do top, pode-se apertar d para mudar o delay de atualização.


Processos pelo terminal:
ctrl+z - pausa o processo que está rodando no foreground do bash
jobs - lista todos os processos que estão rodando no background ou pausado no terminal (firefox, gedit, etc...)
bg [nº do job] - roda o processo no background
fg [nº do job] - roda o processo no foreground
[comando de inicialização do processo] & - inicializa o processo diretamente no background


Execução de Scripts e alteração da permissão de arquivos:
sh [nome do arquivo] - executa os scripts no terminal (os scripts podem ser escritos com o gedit)

As permissões dos arquivos são divididas em : r(Leitura) w(Escrita) x(Execução) e o caracter especial d(Diretório)
Essas permissões podem ser atribuidas diferentemente entre tres grupos: u(o dono do arquivo), g(o grupo de usuarios ao qual o dono do arquivo pertence) e o(os outros usuarios).

ls -l (mostra as permissões aos arquivos e a qual usuario eles pertencem)

chmod [grupo](ex: u/g/o)[alteração da permissão](ex: +x/-x, +w/-w, +r/-r) [nome do arquivo] - adciona/retira a permissão de execução,escrita ou leitura do arquivo para o grupo de usuarios definido(se não for definido nenhum grupo a alteração será feita para todos os usuarios)

Para que arquivo seja executado de qualquer local por qualquer usuario ele deve estar na pasta /usr/bin/


Procurar arquivos:
locate [nome do arquivo] - lista todos os arquivos no sistema com o nome procurado
find [diretorio](ex: /) -(i)name [nome] - procura no diretorio informado arquivos e subdiretorios que contenham esse nome, usa-se o i antes do name para deixar de ser case-sensitive.

sudo updatedb - força a atualização do banco de dados interno do sistema (só pode ser realizado pelo usuário root)

which [comando](ex: firefox,gedit,chmod,locate,etc...) - mostra qual arquivo será executado quando digitarmos o comando


Usuarios e controle de acesso:
sudo [comando] - realiza o comando como usuario root

passwd - para mudar a senha do usuário atual
sudo passwd - mudar a senha do usuario root

su [nome do usuario](ex: root) - para logar como o usuario

sudo adduser [nome] - cria um novo usuario, só pode ser feito pelo root

chmod o-rx [usuario] - tira a permissão de leitura e execução dos outros para a pasta do usuario


Variaveis de ambiente e PATH:
env - lista todas as variáveis de ambiente do sistema.

PATH=$PATH:[diretório](ex: /home/vinicius/workspace) - Adciona o diretório ao PATH para que possa ser acessado de qualquer local (só funciona durante a sessão atual do bash)

Para adcionar um diretório permanentemente ao PATH é preciso editar no diretório do usuário o arquivo .bashrc (é o arquivo que o sistema lê toda vez que inicia o bash)
Adcionando o comando no final do arquivo: PATH=$PATH:[diretório](ex: /home/vinicius/workspace)

As variáveis de ambiente são variáveis globais que podemos utilizar para definir configurações, personalizar nosso terminal. Quando executamos o comando env, podemos ver quais são as variáveis que estão definidas. A variável HOME, por exemplo, guarda o caminho para o diretório do usuário. A variável PATH, guarda informações de onde estão nossos arquivos executáveis para que possamos executar um comando sem a necessidade de digitar o caminho absoluto.

wc - comando utilizado para contar as linhas, palavras e caracteres dos arquivos. ex: wc -w *.txt (conta as palavras de todos os textos no diretório)

ps -e | wc -l - pode ser usado para saber quantos processos estão rodando no momento

echo $[nome da variavel] - pode ser utilizado para ver o conteudo atual da variavel

PS1 - é a variável que guarda a formatação do que aparecerá no terminal.


Instalando programas:
O linux possue o gerenciador de pacotes apt
O comando apt reune os comando mais utilizados do apt-get e do apt-cache em um só lugar e de uma maneira mais "amigável".

sudo apt update - atualiza a lista de pacotes disponiveis para instalação
sudo apt upgrade - atualiza o sistema, atualizando para novas versões os pacotes já instalados

apt search [palavra](ex: ftp) - lista os pacotes disponiveis que tenham essa palavra
apt show  [pacote](ex: mysql-server-8.0 - mostra informações detalhadas sobre o pacote

sudo apt install [pacote](ex: vsftpd) - instalar o pacote disponivel
sudo apt remove [pacote](ex: vsftpd) - desinstalar o pacote

Para instalar programas que não se encontram no repositorio central do linux, é preciso primeiro baixar o pacote em formato .deb(formato compátivel com o linux) e instala-lo com o dpkg:
sudo dpkg -i [nome do pacote baixado](ex: google-chrome-stable_current_amd64.deb) - instala o pacote .deb baixado

Pode acontecer que o dpkg não consiga resolver as dependencias do pacote, para resolver esse problema usa-se o comando:
sudo apt -f install - Comando para resolver as dependencias e instalar os pacotes necessários

sudo dpkg -r [nome do pacote instalado](ex: google-chrome-stable) - desinstala o pacote.


Scripts de inicialização e serviços do sistema:
sudo service [nome do serviço](ex: vsftpd) stop (manda o sinal para que o serviço pare)

/etc/init.d/ - é a pasta em que ficam os scripts que irão iniciar os serviços quando a máquina é ligada, esses scripts também são usados para parar e iniciar os serviços.


Compilando programas a partir do código fonte:
Primero é preciso baixar o código fonte, geralmente compactado, o melhor é em formato tar pois fica salvo as configurações de acesso do pacote.
Depois extrai os arquivos do pacote com:  tar xzf [nome do pacote]
Os pacotes quando possuem dependencia necessária para seu funcionamento tem em seu código fonte o scripit configure para resolver as dependencias.
Para ter certeza ao compilar a partir do código fonte o melhor é procurar a documentação do programa, como do GIT por exemplo:
https://git-scm.com/book/en/v2/Getting-Started-Installing-Git


Acesso remoto:
sudo apt install ssh - para instalar tanto o ssh-client como o ssh-server na máquina

ssh [username]@[máquina] - para estabelecer uma conexão remota com o usuario da máquina

ssh -X [username]@[máquina] - para estabelecer uma conexão remota em modo gráfico com o usuario da máquina, assim temos acesso a processos gráficos como o firefox.

scp (-r, para transferir arquivos de maneira recursiva) [arquivo] [username]@[máquina]:[diretório] - para estabelcer uma conexão SCP e transferir o arquivo para o diretório da máquina remota


Criando comandos:
alias [apelido](ex: atualizar)='[comando]'(ex: sudo apt-get update && sudo apt-get upgrade) - cria um apelido para o comando, porém isso funcionará apenas para a sessão atual do bash.
Para adicionar esse apelido permanentemente é preciso inserir essa linha de comando no arquivo .bashrc na home do usuário e se quiser que seja utilizado por todos usuários é preciso inserir essa linha de comando no arquivo etc/profile


Agendando tarefas com CRON:
https://www.alura.com.br/artigos/como-visualizar-o-tamanho-de-diretorios-no-linux
https://en.wikipedia.org/wiki/Cron

crontab -e 